<?php

namespace KGzocha\ArduinoBundle\Repository;

use Doctrine\ORM\EntityRepository;
use KGzocha\ArduinoBundle\Model\StatisticableRepository;
use KGzocha\ArduinoBundle\Service\Statistics\Model\StatisticsException;

/**
 * TemperatureLogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TemperatureLogRepository extends EntityRepository implements StatisticableRepository
{
    /**
     * Will return X and Y values
     *
     * @param null $id
     *
     * @throws \KGzocha\ArduinoBundle\Service\Statistics\Model\StatisticsException
     * @return mixed
     */
    public function getValues($id = null)
    {
        if (null === $id) {
            throw new StatisticsException('ID parameter in TemperatureLogRepository can not be null');
        }

        return $this->createQueryBuilder('tl')
            ->select('tl.date as x')
            ->addSelect('tl.value as y')
            ->join('tl.thermometer', 't')
            ->where('t.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->getArrayResult();
    }

}
